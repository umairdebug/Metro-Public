@model IEnumerable<Metro.Models.CategoryViewModel>
@inject AppDbContext _db
@{
    ViewData["Title"] = "Index";
    CategoryType type = ViewBag.type;
}

<h1>Index</h1>

<div class="btn-group" role="group" aria-label="Basic example">
    <a asp-action="Create" class="btn-create-category btn btn-info"> Create <i class="fa-regular fa-square-plus"></i> </a>
    <a asp-action="Create" class="btn btn-info"> CreateNew <i class="fa-regular fa-square-plus"></i> </a>
    @foreach (CategoryType item in Enum.GetValues(typeof(CategoryType)))
    {
        if (item != type || true)
        {
            <a class="btn btn-info" href="/Category?type=@item">@item</a>
        }
    }
</div>

<div class="category-form">
    <div class="form-area"></div>
    <i class="fa fa-spin fa-spinner text-info d-none"></i>
</div>

<table class="table action3">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
                <i class="fa-solid fa-user-tie"></i>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
                <i class="fa-solid fa-file-waveform"></i>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Logo)
                <i class="fa-solid fa-image"></i>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rank)
                <i class="fa-solid fa-ranking-star"></i>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
                <i class="fa-brands fa-usps"></i>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Parent)
                <i class="fa-solid fa-user"></i>
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <img src="/@item.LogoUrl"/>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rank)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>*@
            <td>
                @if (item.Status == CategoryStatus.Active)
                {
                    <span class="badge bg-success text-white">Active</span>
                }
                else
                {
                    <span class="badge bg-danger text-white">Blocked</span>
                }
            </td>
            <td>
                <span class="badge bg-info text-white">@item.CategoryWiseProducts</span>
                <span class="badge bg-success text-white">@item.BrandWiseProducts</span>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Parent)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id"><i class="fa-solid fa-user-pen"></i></a> |
                <a asp-controller="Product" asp-route-categoryId="@item.Id"><i class="fa-solid fa-circle-info"></i></a> |
                <a asp-action="Delete" asp-route-id="@item.Id"><i class="fa-solid fa-trash text-danger"></i></a>
            </td>
        </tr>
}
    </tbody>
</table>


@section js{
    <script>
        $(".btn-create-category").click(function (e) {
            e.preventDefault();
            $(".category-form .fa-spinner").removeClass('d-none');
            $.get('/category/Create?iar=true', function (res) {
                $(".category-form .fa-spinner").addClass('d-none');
                $(".category-form .form-area").hide(0).html(res).slideDown(500);
            });
        });
    </script>
}